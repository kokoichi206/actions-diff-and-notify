name: Build, check diff and Deploy

on:
  push:
    branches:
      - main

jobs:
  # build:
  #   # HEADコミットが'skip ci'を含んでいれば、ciをキャンセルする。
  #   if: "!contains(github.event.head_commit.message, 'skip ci')"

  #   runs-on: ubuntu-latest
  #   timeout-minutes: 30

  #   # environmentを設定する！
  #   environment: production
  #   steps:
  #     - name: Check out
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 2

  #     - name: Set up JDK 11
  #       uses: actions/setup-java@v2
  #       with:
  #         distribution: 'zulu'
  #         java-version: '11'

  #     - name: Run Android Lint
  #       run: ./gradlew assembleDebug

  deploy:
    runs-on: ubuntu-20.04
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - name: Check out
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # 0 means all branches

      - name: Check dir
        run: |
          ls
          ls app

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Run Android Build
        run: ./gradlew assembleDebug



      # - name: Setup Hugo
      #   uses: peaceiris/actions-hugo@v2
      #   with:
      #     hugo-version: '0.85.0'

      # - name: Build
      #   run: hugo --minify

      - name: Build
        run: |
          ls
          echo "===== ls app ====="
          ls app
          metadata_path='app/build/generated/third_party_licenses/res/raw/third_party_license_metadata'
          data_path='app/build/generated/third_party_licenses/res/raw/third_party_licenses'
          mkdir ./public
          mv "${metadata_path}" ./public
          mv "${data_path}" ./public
          ls ./public
      # - name: Deploy current license info
      #   uses: peaceiris/actions-gh-pages@v3
      #   if: ${{ github.ref == 'refs/heads/main' }} && ${{ env.env_target != '' }}
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     publish_dir: ./public
      - name: Check Diff
        continue-on-error: true
        run: |
          set +e
          metadata_path='third_party_license_metadata'
          data_path='third_party_licenses'

          git checkout origin/gh-pages
      
          ls ./public
          meta_file="./third_party_license_metadata"
          if [ ! -e "$meta_file" ]; then
            touch "$meta_file"
          fi
          echo "===== diff start ====="
          set +e
          diff_meta=`diff ${meta_file} "./public/${metadata_path}"`
          set -e
          echo "===== echo diff ====="
          echo "$diff_meta"
          echo "===== echo diff finished ====="
          
          license_file="./third_party_license"
          if [ ! -e "$license_file" ]; then
            touch "$license_file"
          fi
          set +e
          diff_license=`diff ${license_file} "./public/${data_path}"`
          set -e
          echo "===== echo diff ====="
          echo "$diff_license"
          echo "===== echo diff finished ====="

          echo "env_diff_meta=$diff_meta" >> $GITHUB_ENV
          echo "env_diff_license=$diff_license" >> $GITHUB_ENV
      - uses: actions/checkout@v2
        with:
          repository: ${{ github.repository }}
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.ref == 'refs/heads/main' }} && ${{ env.env_target != '' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public

# ╰─ git diff origin/gh-pages:third_party_license_metadata origin/main:README.md                            

#       - name: Set the emulator target name to GITHUB_ENV 
#         id: setup_target_name
#         run: |
#           target="default"
#           if [ "${{ matrix.api-level }}" -ge "29" ]; then
#             target="google_apis"
#           fi
#           echo "env_target=$target" >> $GITHUB_ENV
#       - name: Run tests
#         uses: reactivecircus/android-emulator-runner@v2
#         with:
#           api-level: ${{ matrix.api-level }}
#           target: ${{ env.env_target }}
#           arch: x86
#           profile: Galaxy Nexus
#           script: ./gradlew connectedCheck --stacktrace
# if [ -n "$STRING" ]; then
#   #処理
# fi